#version 430

// Process particles in blocks of 240. Because my graphics card has 240 shader units.
layout (local_size_x = 240, local_size_y = 1, local_size_z = 1) in;

struct Particle {
    vec4 origPosition;
    vec4 position;
    vec4 startColor;
    vec4 endColor;
    vec4 accelleration;
    vec4 speed;
};

layout (std430, binding = 0) buffer PositionBuffer {
    Particle positions[];
};

// Delta time
uniform float dt;
uniform bool  collapse;

void main(void)
{
    if (collapse) {
        uint index = gl_GlobalInvocationID.x;

        vec4 a   = positions[index].accelleration;
        vec4 v   = positions[index].speed;
        vec4 pos = positions[index].position;

        v = (v + a * dt) * 0.999;
        pos = pos + v * dt;



        if (v.x < -0.5) {
            v.x = -0.5;
        }
        if (v.x > 0.5) {
            v.x = 0.5;
        }
        if (v.y < -0.5) {
            v.y = -0.5;
        }

        if (pos.y < -50.0) {
            v.y *= -1.0;
        }

        if (pos.x < -50 || pos.x > 50) {
            //v.x *= -1.0;
            a.x *= -1.0;
        }

        // Store the new position and velocity back into the buffers
        positions[index].position = pos;
        positions[index].speed = v;
        positions[index].accelleration = a;
    }
}



